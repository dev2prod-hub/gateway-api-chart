name: Lint, Test, and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  HELM_VERSION: "3.12.0"
  KUBERNETES_VERSIONS: "1.25,1.26,1.27"

jobs:
  lint-and-unit:
    name: Lint & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Lint Chart
        run: helm lint ./charts/gateway-api --strict

      - name: Install unittest plugin
        run: helm plugin install https://github.com/quintush/helm-unittest

      - name: Run Unit Tests
        run: helm unittest --helm3 -f tests/unit/*.yaml ./charts/gateway-api

  integration:
    name: Integration (k8s ${{ matrix.k8s-version }})
    needs: lint-and-unit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s-version: ${{ env.KUBERNETES_VERSIONS }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Kind Cluster
        uses: helm/kind-action@v1
        with:
          kubernetes-version: "v${{ matrix.k8s-version }}"
          config: ./tests/kind-configs/cluster.yaml

      - name: Install Gateway API CRDs
        run: |
          kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.0.0/standard-install.yaml

      - name: Install Chart
        run: |
          helm upgrade --install gateway-api ./charts/gateway-api \
            --namespace gateway-system \
            --create-namespace \
            --wait \
            --timeout 5m

      - name: Validate Deployment
        run: |
          kubectl -n gateway-system get all
          kubectl get crd gateways.gateway.networking.k8s.io
          kubectl get gatewayclasses

      - name: Run Integration Tests
        if: always()
        run: |
          bats tests/integration/gateway-tests.bats

  chart-releaser:
    name: Publish Chart
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint-and-unit, integration]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Package Chart
        run: helm package ./charts/gateway-api -d ./repo

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./repo
          keep_files: true
